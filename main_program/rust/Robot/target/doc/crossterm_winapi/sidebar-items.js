initSidebarItems({"enum":[["EventFlags","The type of mouse event. If this value is zero, it indicates a mouse button being pressed or released. Otherwise, this member is one of the following values."],["HandleType","The standard handles of a process."],["InputRecord","An input event."]],"fn":[["coord_result","Get the result of a call to WinAPI that returns a `COORD` as an [`io::Result`]."],["handle_result","Get the result of a call to WinAPI that returns a handle or `INVALID_HANDLE_VALUE`."],["nonnull_handle_result","Get the result of a call to WinAPI that returns a handle or `NULL`."],["result","Get the result of a call to WinAPI as an [`io::Result`]."]],"struct":[["ButtonState","The status of the mouse buttons. The least significant bit corresponds to the leftmost mouse button. The next least significant bit corresponds to the rightmost mouse button. The next bit indicates the next-to-leftmost mouse button. The bits then correspond left to right to the mouse buttons. A bit is 1 if the button was pressed."],["Console","A wrapper around a screen buffer."],["ConsoleMode","A wrapper around a screen buffer, focusing on calls to get and set the console mode."],["ControlKeyState","The state of the control keys."],["Coord","This is type represents the position of something on a certain ‘x’ and ‘y’."],["Handle","This abstracts away some WinAPI calls to set and get some console handles."],["KeyEventRecord","A keyboard input event."],["MouseEvent","A mouse input event."],["ScreenBuffer","A wrapper around a screen buffer."],["ScreenBufferInfo","Information about a console screen buffer."],["Semaphore","A Windows semaphore."],["Size","This is type represents the size of something in width and height."],["WindowPositions","This is a wrapper for the locations of a rectangle."]]});